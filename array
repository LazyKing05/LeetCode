#69.x的平方根
   题目大意：给一个非负整数，返回算术平方根，但只保留整数部分。
   一开始想的是：0，1，4，9，16，25这些完全平方数，输入的x一定在两个一大一小的完全平方数之间，或者恰好等于某个完全平方数，那么可以找到区间，
选择较小的边界，输出该小边界对应的开根值。
   但是该方法不仅要设定大量的完全平方数，还要设定其开根值，还要遍历比较得到一个区间，完全不值得。
   二分法思想：绝大部分非负整数开根都不会超过它自身的一半（x²>4——x>2)，故x<2时，return x；x>2时再在区间[1,x/2]内讨论，每次都取中间值（二分思想）。
注意此时这个区间内就包含开根后的值。怎么验证呢？两种方法：一是该值平方与x作比较；二是该值与（x/该值）作比较；前者要算乘法，且数值越来越大，数据类型使用不当将导致溢出。
而后者不会，故采用除法比较。

int mySqrt(int x) {
    int left=1;
    int right=x/2; 
    int mid;

    if(x<2) return x;

    while(left<=right){
        mid=(left+right)/2;
        long long temp=(long long) x/mid;
        if(temp==mid){
            return mid;
        }
        else if(temp<mid){
            right=mid-1;
        }
        else{
            left=mid+1;
        }
    }
    return right;
}
